plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'kotlin-platform-js'

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    experimental.coroutines = "enable"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:0.6.9"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core-js:0.22.5'
    expectedBy project(":kthings-common")
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

compileKotlin2Js {
    //kotlinOptions.friendModulesDisabled =false
    //kotlinOptions.main = "call"
    //kotlinOptions.metaInfo = true
    kotlinOptions.moduleKind = "umd"
    //kotlinOptions.noStdlib = true
    //kotlinOptions.outputFile
    kotlinOptions.sourceMap = true
    //kotlinOptions.sourceMapEmbedSources
    //kotlinOptions.sourceMapPrefix
    //kotlinOptions.target = "v5"
    //kotlinOptions.typedArrays = true
}

clean {
    delete file("node_modules")
}

sourceSets.all { sourceSet ->
    tasks.create(sourceSet.getTaskName("unpack", "kotlinJsDependencies")) {
        group = "build"
        description = "Unpacks ${sourceSet.name} dependencies to a format Node.js can consume"

        def outputDir = new File(buildDir, name)
        inputs.property("compileClasspath", sourceSet.compileClasspath)
        outputs.dir(outputDir)

        doLast {
            copy {
                into(outputDir)
                include "*.js"
                sourceSet.compileClasspath.forEach { thisJar ->
                    from zipTree(thisJar)
                }
            }
        }
    }
}

task runJS(dependsOn: [compileKotlin2Js, unpackKotlinJsDependencies, npmInstall], type: NodeTask) {
    options = ["-r", "source-map-support/register"]
    script = sourceSets.main.output.classesDirs.collect { new File(it, "${archivesBaseName}.js") }.find { it.file }
    execOverrides {
        it.environment("NODE_PATH", new File(buildDir, "unpackKotlinJsDependencies").toString())
    }
}
